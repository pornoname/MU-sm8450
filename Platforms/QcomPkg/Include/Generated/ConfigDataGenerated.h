/** @file ConfigDataGenerated.h

  Autogenerated configuration headers from mu_feature_config

  Copyright (c) Microsoft Corporation.
  SPDX-License-Identifier: BSD-2-Clause-Patent

**/

#ifndef CONFIGDATAGENERATED_H
#define CONFIGDATAGENERATED_H
// The config public header must be included prior to this file
// Generated Header
//  Script: /home/robotix/UEFI_Porting/MU_Porting/ARM64/MU-Qcom/Features/CONFIG/SetupDataPkg/Tools/KnobService.py
//  Schema: /home/robotix/UEFI_Porting/MU_Porting/ARM64/MU-Qcom/Platforms/QcomPkg/CfgData/QcomCfgData.xml

typedef struct {
  SecondDummyStruct DummyStruct1;
  SecondDummyStruct DummyStruct2;
  BOOLEAN PowerOnPort0;
  ENUM_TYPE DummyKnob3;
} KNOB_VALUES;

CONST KNOB_VALUES gKnobDefaultValues = 
{
  .DummyStruct1={.DummyStructChildren={{.DummyValue={ENUM_TYPE_DUMMY2,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY0,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY0}},{.DummyValue={ENUM_TYPE_DUMMY0,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY2,ENUM_TYPE_DUMMY0,ENUM_TYPE_DUMMY1}}},.Count=2ul},
  .DummyStruct2={.DummyStructChildren={{.DummyValue={ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY0,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY1}},{.DummyValue={ENUM_TYPE_DUMMY0,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY2,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY1}}},.Count=1ul},
  .PowerOnPort0=TRUE,
  .DummyKnob3=ENUM_TYPE_DUMMY2,
};
#ifdef CONFIG_INCLUDE_CACHE
KNOB_VALUES gKnobCachedValues = 
{
    .DummyStruct1={.DummyStructChildren={{.DummyValue={ENUM_TYPE_DUMMY2,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY0,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY0}},{.DummyValue={ENUM_TYPE_DUMMY0,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY2,ENUM_TYPE_DUMMY0,ENUM_TYPE_DUMMY1}}},.Count=2ul},
    .DummyStruct2={.DummyStructChildren={{.DummyValue={ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY0,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY1}},{.DummyValue={ENUM_TYPE_DUMMY0,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY2,ENUM_TYPE_DUMMY1,ENUM_TYPE_DUMMY1}}},.Count=1ul},
    .PowerOnPort0=TRUE,
    .DummyKnob3=ENUM_TYPE_DUMMY2,
};
#define CONFIG_CACHE_ADDRESS(knob) (&gKnobCachedValues.knob)
#else // CONFIG_INCLUDE_CACHE
#define CONFIG_CACHE_ADDRESS(Knob) (NULL)
#endif // CONFIG_INCLUDE_CACHE

BOOLEAN ValidateEnumValueENUM_TYPE(ENUM_TYPE Value)
{
  INTN NumericValue = (INTN)Value;
  if (NumericValue < 0) return FALSE;
  if (NumericValue > 2) return FALSE;
  return TRUE;
}


BOOLEAN ValidateKnobNoConstraints(CONST VOID * Buffer)
{
  (VOID)Buffer;
  return TRUE;
}

BOOLEAN ValidateKnobContentDummyStruct1(CONST VOID * Buffer)
{
  SecondDummyStruct* Value = (SecondDummyStruct*)Buffer;
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[0].DummyValue[0])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[0].DummyValue[1])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[0].DummyValue[2])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[0].DummyValue[3])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[0].DummyValue[4])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[1].DummyValue[0])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[1].DummyValue[1])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[1].DummyValue[2])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[1].DummyValue[3])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[1].DummyValue[4])) {
    return FALSE;
  }
  return TRUE;
}

BOOLEAN ValidateKnobContentDummyStruct2(CONST VOID * Buffer)
{
  SecondDummyStruct* Value = (SecondDummyStruct*)Buffer;
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[0].DummyValue[0])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[0].DummyValue[1])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[0].DummyValue[2])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[0].DummyValue[3])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[0].DummyValue[4])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[1].DummyValue[0])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[1].DummyValue[1])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[1].DummyValue[2])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[1].DummyValue[3])) {
    return FALSE;
  }
  if (!ValidateEnumValueENUM_TYPE(Value->DummyStructChildren[1].DummyValue[4])) {
    return FALSE;
  }
  return TRUE;
}

#define ValidateKnobContentPowerOnPort0 ValidateKnobNoConstraints

BOOLEAN ValidateKnobContentDummyKnob3(CONST VOID * Buffer)
{
  ENUM_TYPE* Value = (ENUM_TYPE*)Buffer;
  if (!ValidateEnumValueENUM_TYPE(*Value)) {
    return FALSE;
  }
  return TRUE;
}


KNOB_DATA gKnobData[5] = {
  {
    KNOB_DummyStruct1,
    &gKnobDefaultValues.DummyStruct1,
    CONFIG_CACHE_ADDRESS(DummyStruct1),
    sizeof(SecondDummyStruct),
    "DummyStruct1",
    13, // Length of name (including NULL terminator)
    {0x481b771d,0x4d96,0x400c,{0x9f,0x4,0xd8,0xe1,0x88,0x38,0x66,0xc4}}, // 481B771D-4D96-400C-9F04-D8E1883866C4
    7,
    &ValidateKnobContentDummyStruct1
  },
  {
    KNOB_DummyStruct2,
    &gKnobDefaultValues.DummyStruct2,
    CONFIG_CACHE_ADDRESS(DummyStruct2),
    sizeof(SecondDummyStruct),
    "DummyStruct2",
    13, // Length of name (including NULL terminator)
    {0x481b771d,0x4d96,0x400c,{0x9f,0x4,0xd8,0xe1,0x88,0x38,0x66,0xc4}}, // 481B771D-4D96-400C-9F04-D8E1883866C4
    7,
    &ValidateKnobContentDummyStruct2
  },
  {
    KNOB_PowerOnPort0,
    &gKnobDefaultValues.PowerOnPort0,
    CONFIG_CACHE_ADDRESS(PowerOnPort0),
    sizeof(BOOLEAN),
    "PowerOnPort0",
    13, // Length of name (including NULL terminator)
    {0x481b771d,0x4d96,0x400c,{0x9f,0x4,0xd8,0xe1,0x88,0x38,0x66,0xc4}}, // 481B771D-4D96-400C-9F04-D8E1883866C4
    7,
    &ValidateKnobContentPowerOnPort0
  },
  {
    KNOB_DummyKnob3,
    &gKnobDefaultValues.DummyKnob3,
    CONFIG_CACHE_ADDRESS(DummyKnob3),
    sizeof(ENUM_TYPE),
    "DummyKnob3",
    11, // Length of name (including NULL terminator)
    {0x481b771d,0x4d96,0x400c,{0x9f,0x4,0xd8,0xe1,0x88,0x38,0x66,0xc4}}, // 481B771D-4D96-400C-9F04-D8E1883866C4
    7,
    &ValidateKnobContentDummyKnob3
  },
  {
    KNOB_MAX,
    NULL,
    NULL,
    0,
    NULL,
    0,
    {0,0,0,{0,0,0,0,0,0,0,0}},
    0,
    NULL
  }
};

UINTN gNumKnobs = KNOB_MAX;
#endif // CONFIGDATAGENERATED_H
