/** @file ConfigClientGenerated.h

  Autogenerated configuration headers from mu_feature_config

  Copyright (c) Microsoft Corporation.
  SPDX-License-Identifier: BSD-2-Clause-Patent

**/

#ifndef CONFIGCLIENTGENERATED_H
#define CONFIGCLIENTGENERATED_H
#include <Uefi.h>
// Generated Header
//  Script: /home/robotix/UEFI_Porting/MU_Porting/ARM64/MU-Qcom/Features/CONFIG/SetupDataPkg/Tools/KnobService.py
//  Schema: /home/robotix/UEFI_Porting/MU_Porting/ARM64/MU-Qcom/Platforms/QcomPkg/CfgData/QcomCfgData.xml

#pragma pack(push, 1)
// Schema-defined enums
// Dummy Enums
typedef enum {
  ENUM_TYPE_DUMMY0 = 0, // First dummy
  ENUM_TYPE_DUMMY1 = 1, // Second dummy
  ENUM_TYPE_DUMMY2 = 2, // Third dummy
  _ENUM_TYPE_PADDING = 0xffffffff // Force packing to int size
} ENUM_TYPE;

STATIC_ASSERT(sizeof(ENUM_TYPE) == sizeof(UINT32), "enum must be unsigned 32 bit int");

// Schema-defined structures
typedef struct {
  ENUM_TYPE DummyValue[5];
} DummyStruct;

STATIC_ASSERT(sizeof(DummyStruct) == 20, "structure size must be consistent");

typedef struct {
  DummyStruct DummyStructChildren[2];
  UINT32 Count;
} SecondDummyStruct;

STATIC_ASSERT(sizeof(SecondDummyStruct) == 44, "structure size must be consistent");

#pragma pack(pop)

// Schema-defined knobs
// DummyStruct1 knob


EFI_STATUS ConfigGetDummyStruct1 (SecondDummyStruct *Knob);
// DummyStruct2 knob


EFI_STATUS ConfigGetDummyStruct2 (SecondDummyStruct *Knob);
// PowerOnPort0 knob


EFI_STATUS ConfigGetPowerOnPort0 (BOOLEAN *Knob);
// DummyKnob3 knob


EFI_STATUS ConfigGetDummyKnob3 (ENUM_TYPE *Knob);

#define KNOB_DummyStruct1 0
#define KNOB_DummyStruct2 1
#define KNOB_PowerOnPort0 2
#define KNOB_DummyKnob3 3
#define KNOB_MAX 4
#endif // CONFIGCLIENTGENERATED_H
